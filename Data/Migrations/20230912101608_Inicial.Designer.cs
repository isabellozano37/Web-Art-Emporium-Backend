// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20230912101608_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.DetallesCompras", b =>
                {
                    b.Property<int>("Id_DetallesCompras")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_DetallesCompras"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdCompras")
                        .HasColumnType("int");

                    b.Property<int>("IdProductos")
                        .HasColumnType("int");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("Id_DetallesCompras");

                    b.ToTable("DetallesCompras", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Categoria", b =>
                {
                    b.Property<int>("Id_Categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Categoria"));

                    b.Property<string>("Escultura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pintura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Categoria");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Compras", b =>
                {
                    b.Property<int>("Id_Compras")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Compras"));

                    b.Property<int?>("ComprasId_Compras")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProductos")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId_Usuario")
                        .HasColumnType("int");

                    b.HasKey("Id_Compras");

                    b.HasIndex("ComprasId_Compras");

                    b.HasIndex("UsuarioId_Usuario");

                    b.ToTable("Compras", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Productos", b =>
                {
                    b.Property<int>("IdProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductos"));

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategorias")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Precio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProductos");

                    b.HasIndex("IdCategorias");

                    b.HasIndex("IdSolicitud")
                        .IsUnique();

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Roll", b =>
                {
                    b.Property<int>("IdRoll")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRoll"));

                    b.Property<string>("Nombre_Roll")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRoll");

                    b.ToTable("Roll", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Usuario", b =>
                {
                    b.Property<int>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Usuario"));

                    b.Property<string>("Apellidos_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRoll")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Usuario");

                    b.HasIndex("IdRoll");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Entities.Solicitud", b =>
                {
                    b.Property<int>("Id_Solicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Solicitud"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Precio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Solicitud");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Solicitud", (string)null);
                });

            modelBuilder.Entity("Entities.Tipos", b =>
                {
                    b.Property<int>("IdTipos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipos"));

                    b.Property<string>("Acuarela")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bustos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ceramicas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Oleo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("categoriaId_Categoria")
                        .HasColumnType("int");

                    b.HasKey("IdTipos");

                    b.HasIndex("categoriaId_Categoria");

                    b.ToTable("Tipos", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Compras", b =>
                {
                    b.HasOne("Entities.Entities.Compras", null)
                        .WithMany("compras")
                        .HasForeignKey("ComprasId_Compras");

                    b.HasOne("Entities.Entities.Usuario", null)
                        .WithMany("compras")
                        .HasForeignKey("UsuarioId_Usuario");
                });

            modelBuilder.Entity("Entities.Entities.Productos", b =>
                {
                    b.HasOne("Entities.Entities.Categoria", "Categorias")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategorias")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Solicitud", "Solicitud")
                        .WithOne("Productos")
                        .HasForeignKey("Entities.Entities.Productos", "IdSolicitud")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorias");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Entities.Entities.Usuario", b =>
                {
                    b.HasOne("Entities.Entities.Roll", "Roll")
                        .WithMany()
                        .HasForeignKey("IdRoll")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roll");
                });

            modelBuilder.Entity("Entities.Solicitud", b =>
                {
                    b.HasOne("Entities.Entities.Usuario", "Usuario")
                        .WithMany("Solicitud")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entities.Tipos", b =>
                {
                    b.HasOne("Entities.Entities.Categoria", "categoria")
                        .WithMany("Tipos")
                        .HasForeignKey("categoriaId_Categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("Entities.Entities.Categoria", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("Tipos");
                });

            modelBuilder.Entity("Entities.Entities.Compras", b =>
                {
                    b.Navigation("compras");
                });

            modelBuilder.Entity("Entities.Entities.Usuario", b =>
                {
                    b.Navigation("Solicitud");

                    b.Navigation("compras");
                });

            modelBuilder.Entity("Entities.Solicitud", b =>
                {
                    b.Navigation("Productos")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
